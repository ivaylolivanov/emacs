;;===========================
;;= Base of the programming =
;;=        settings         =
;;===========================
;; - Automatic indent with <RET>
;; - Yasnippet
;; - GDB
;; - Compile a makefile with <F5>
;; - Flycheck


;; - Automatic indent with <RET>
(global-set-key (kbd "RET") 'newline-and-indent)


;; - Yasnippet
(require 'yasnippet)
(yas-reload-all)
(add-hook 'prog-mode-hook #'yas-minor-mode)


;; - GDB to use many windows mode
(setq gdb-many-windows t
      gdb-show-main t)


;; - Compile a makefile with <F5>
;; These settings are taken from prelude emacs
(defun prelude-colorize-compilation-buffer ()
  "Colorize a compilation mode buffer."
  (interactive)
  (when (eq major-mode 'compilation-mode)
    (let ((inhibit-read-only t))
      (ansi-color-apply-on-region (point-min) (point-max)))))

;; Setup compilation-mode used by `compile' command
(require 'compile)
(setq compilation-ask-about-save nil          ; Save before compiling
      compilation-always-kill t               ; Kill old compile processes before starting the new one
      compilation-scroll-output 'first-error) ; Automatically scroll to first
(global-set-key (kbd "<f5>") 'compile)

;; Taken from prelude-c.el:48
(defun prelude-makefile-mode-defaults ()
  (whitespace-toggle-options '(tabs))
  (setq indent-tabs-mode t))

(setq prelude-makefile-mode-hook 'prelude-makefile-mode-defaults)

(add-hook 'makefile-mode-hook (lambda ()
                                (run-hooks 'prelude-makefile-mode-hook)))


;; - Enable flycheck globally
(require ' flycheck)
(global-flycheck-mode)



;;============================
;;= Enable and hook lsp-mode =
;;============================
(add-to-list 'load-path "/home/ivo/.emacs.d/elpa/lsp-mode-4.2")
(require 'lsp-mode)

(lsp-define-stdio-client
 ;; This can be a symbol of your choosing. It will be used as a the
 ;; prefix for a dynamically generated function "-enable"; in this
 ;; case: lsp-prog-major-mode-enable
 lsp-prog-major-mode
 "language-id"
 ;; This will be used to report a project's root directory to the LSP
 ;; server.
 (lambda () default-directory)
 ;; This is the command to start the LSP server. It may either be a
 ;; string containing the path of the command, or a list wherein the
 ;; car is a string containing the path of the command, and the cdr
 ;; are arguments to that command.
 '("/my/lsp/server" "and" "args"))

;; Here we'll add the function that was dynamically generated by the
;; call to lsp-define-stdio-client to the major-mode hook of the
;; language we want to run it under.
;;
;; This function will turn lsp-mode on and call the command given to
;; start the LSP server.

;; Uncomment to enable setting projectile root automaticaly
;; (defun my-set-projectile-root ()
;;   (when lsp--cur-workspace
;;     (setq projectile-project-root (lsp--workspace-root lsp--cur-workspace))))
;; (add-hook 'lsp-before-open-hook #'my-set-projectile-root)
(add-hook 'prog-major-mode #'lsp-prog-major-mode-enable)
;;============================



;;======================================
;;= Calls configurations for different =
;;=             languages              =
;;======================================


;;======================================

(provide 'prog_base)
