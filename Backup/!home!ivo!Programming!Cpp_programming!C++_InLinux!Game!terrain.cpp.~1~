#include "GL/freeglut.h"
#include "terrain.hpp"

// Constructor of class Terrain
Terrain::Terrain()
{
	this->beginning=Point2D();
	this->height=0.5;
	this->width=0.5;
	this->structType=solid;
	this->valueOfRed=0;
	this->valueOfGreen=0;
	this->valueOfBlue=0;
}

Terrain::Terrain(Point2D _begin,double _height, double _width, typeOfStructure _type, double _r, double _g, double _b)
{
	this->beginning=_begin;
	this->height=_height;
	this->width=_width;
	this->structType=_type;
	this->valueOfRed=_r;
	this->valueOfGreen=_g;
	this->valueOfBlue=_b;
}


// Setters of class Terrain
void Terrain::setStructType(typeOfStructure _type)
{
	this->structType=_type;
}

void Terrain::setBeginning(Point2D _begin)
{
	this->beginning=_begin;
}

void Terrain::setValOfRed(double _red)
{
	this->valueOfRed=_red;
}

void Terrain::setValOfGreen(double _green)
{
	this->valueOfGreen=_green;
}

void Terrain::setValOfBlue(double _blue)
{
	this->valueOfBlue=_blue;
}

void Terrain::setHeight(double _height)
{
	this->height=_height;
}

void Terrain::setWidth(double _width)
{
	this->width=_width;
}


// Getters of class terrain
typeOfStructure Terrain::getStructType()
{
	return this->structType;
}

Point2D Terrain::getBeginning()
{
	return this->beginning;
}

double Terrain::getValOfRed()
{
	return this->valueOfRed;
}

double Terrain::getValOfGreen()
{
	return this->valueOfGreen;
}

double Terrain::getValOfBlue()
{
	return this->valueOfBlue;
}

double Terrain::getHeight()
{
	return this->height;
}

double Terrain::getWidth()
{
	return this->width;
}

// Create piece of Terrain
void Terrain::createTerrainPiece()
{
	glTranslatef(0, 0, 0);

	glColor3f(this->valueOfRed, this->valueOfGreen, this->valueOfBlue);

	glBegin(GL_QUADS);

	glNormal3f(0.0, 0.0, 1.0);

	glVertex2d(this->getBeginning().getX(), this->getBeginning().getY());
	glVertex2d(this->getBeginning().getX()+this->getWidth(), this->getBeginning().getY());
	glVertex2d(this->getBeginning().getX()+this->getWidth(), this->getBeginning().getY()+this->getHeight());	glVertex2d(this->getBeginning().getX(),this->getBeginning().getY()+this->getHeight());

	glEnd();

	glTranslatef(this->getBeginning().getX(), this->getBeginning().getY(), 0);

}
